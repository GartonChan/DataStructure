1. 设计编码方案需遵循的原则:
    编码 - 解码
    发送编码应尽可能短以提高传输效率,节省存储空间

2. 不同的编码方法
    a.等长编码
        如ASCII码, n个不同代码需要log2 n位.适用于每个字符使用频率相等
    b.不等长编码(最优编码)  -- 与符号使用概率密切相关.
        常用 -> 最好为其分配较短编码字
        不常用 -> 分配较长的编码字,以节省内存空间
        
        此时,平均编码长度会达到最小, 即最优编码. 哈夫曼编码是不等长编码.

    -> 哈夫曼编码:
        设二叉树具有n个带权值的叶子结点, 
        从根结点到各叶结点的路径长度与对应结点权值乘积之和
        称为二叉树的带权路径长度
            具有最小带权路径长度的二叉树称为哈夫曼树. (必须是最小!!!才是哈夫曼树)
            Weighted Path Length of Tree  (WPL= sigma(i~n) wi * li)
        
        而要使一棵二叉树的WPL值最小, 必须使权值大的叶子结点尽可能靠近根结点,权值小的远离.
            因而方法如下:
                1. n个权值 构造n课只有一个叶子结点的二叉树. F={T1,T2,...,Tn}
                2. 在F中选取根结点 权值最小和次小 的两颗二叉树,作为左,右子树构造一棵新的二叉树,
                    新的二叉树根结点的权值 为 左右子树根结点权值之和
                3. 集合F 删除作为左右子树的两颗二叉树,并将新建的加入到集合F
        
        带权路径长度最小的二叉树, 被称为 最优二叉树 或是 哈夫曼树.
